apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: taskyapp-ingress
  namespace: dev
  labels:
    app: tasky
    version: v1.0.0
    environment: development
    tier: ingress
    purpose: routing
spec:
  tls:
  - hosts:
    - tasky.com                     # Replace with your domain
    secretName: tasky-tls-secret    # Name of the TLS secret created below
  rules:
  - host: tasky.com                 # Replace with your domain (I added this to the /etc/hosts file on my local machine)
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: taskyapp-svc  # Service name for the Tasky app
            port:
              number: 3030      # Port exposed by the service not by the NodePort

---
# Creating a TLS secret for the Ingress
apiVersion: v1
kind: Secret
metadata:
  name: tasky-tls-secret
  namespace: dev
  labels:
    app: tasky
    version: v1.0.0
    environment: development
    tier: ingress
    purpose: tls
type: kubernetes.io/tls
# base64 encoded TLS certificate and key
# You can generate a self-signed certificate for testing purposes using OpenSSL:
# openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj "/CN=tasky.com/O=TaskyApp/C=US"
# Then encode the files using base64: base64 tls.crt > tls.crt.base64 && base64 tls.key > tls.key.base64
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lVWnZsUlpxWmNhaGNXYWUxdFA2WHlHNGhvZEh3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0tERVNNQkFHQTFVRUF3d0pkR0Z6YTNrdVkyOXRNUkl3RUFZRFZRUUtEQWwwWVhOcmVTNWpiMjB3SGhjTgpNalV3TmpJMU1ESXhORFE1V2hjTk1qWXdOakkxTURJeE5EUTVXakFvTVJJd0VBWURWUVFEREFsMFlYTnJlUzVqCmIyMHhFakFRQmdOVkJBb01DWFJoYzJ0NUxtTnZiVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBSzg2YzRCV2U2WWkvZlMxaUg3NzFGVENtQVAwcGxlb08rTkkxbVFzQ0lMcUpLdGFDN1ljaTJvdwo5bnZCTzlsYzFnYThvWGxoN09IVUJYbFI3Q2tlRk5HZHdQYmhiRWl5aGRpbnVZQVhiTFlDVDlqemRmeEVVSkwxCkZ1c3ZObjh4VytDNGI0QnRtUG91dENxZktiNnBqZGlHQmIzd0ZmalJnNWc1Yzk1VjRkSWpKUEdLVU1NR1d0ekIKWVhYYnh5VkZZb0RnZlR0anZrTVRKYW4zc1I4eTE5TysrWVlCaUs1aHFoSkgxKzRLeCttR2V5RU45M3BnWkV5NwpZcFRoVEZ6SXVXL0JTSFUyOFpUb0dDQkUzVmMzaXdMVlZ5UTh6U2ZUUjhFSFdnV1ZHM2w2U2o3ck1YZjZuZkNoCm9PaDNsb1VybmpnTnJYT0RlQUdIUkZrdnhGLzQvU2tDQXdFQUFhTlRNRkV3SFFZRFZSME9CQllFRkdKWXYwK3AKV1JyeVk1SGcvZzZtNTVFMXY0Zk5NQjhHQTFVZEl3UVlNQmFBRkdKWXYwK3BXUnJ5WTVIZy9nNm01NUUxdjRmTgpNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQnNxYnlKY0RGUHhXVjdxCnNRZFNKaUJPOG9vL01mbGhIWGZLc0I2L2FudFdYMDRBUjkrWUhWdy94NWlQVTZvMUIzempER0VSQzlkR0hTTzAKMHlnNmRibHpsMjVqQ2Z5Z3ZWanZubkYreFpHdW9HNmtIeHdOMlRqOEdZRU1wQ2RCaU1OaUlMS0lYVGRGOStUbAovYTB3VjQ4Y3llTThSNGFrdUZSRzdMbVVCSUhKLzI0eWtBYTZ6QVl0NTRXbFhPaWllaVhBMUZ3VXN2NG1DY3E4CnRzdGN1a2VkWG1OMkFhd3YrMmtCZHFabUZJMkNUWTlTenZuN25VN1l4Nnl3TUxnUU5wdzQxOGkyRS9nb0ZFMmoKSTJZUFp2bW5QczZoUDMwVGM2ZXhQOGYyWngxcWZnL0ZJcVYwVXZmcjliNnl3TjRSQlp2bHFTSEhHRGhsbkIxUwpMM21oWW1JPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ3ZPbk9BVm51bUl2MzAKdFloKys5UlV3cGdEOUtaWHFEdmpTTlprTEFpQzZpU3JXZ3UySEl0cU1QWjd3VHZaWE5ZR3ZLRjVZZXpoMUFWNQpVZXdwSGhUUm5jRDI0V3hJc29YWXA3bUFGMnkyQWsvWTgzWDhSRkNTOVJickx6Wi9NVnZndUcrQWJaajZMclFxCm55bStxWTNZaGdXOThCWDQwWU9ZT1hQZVZlSFNJeVR4aWxEREJscmN3V0YxMjhjbFJXS0E0SDA3WTc1REV5V3AKOTdFZk10ZlR2dm1HQVlpdVlhb1NSOWZ1Q3NmcGhuc2hEZmQ2WUdSTXUyS1U0VXhjeUxsdndVaDFOdkdVNkJnZwpSTjFYTjRzQzFWY2tQTTBuMDBmQkIxb0ZsUnQ1ZWtvKzZ6RjMrcDN3b2FEb2Q1YUZLNTQ0RGExemczZ0JoMFJaCkw4UmYrUDBwQWdNQkFBRUNnZ0VBRjhBeGRaekRSOEtJYjRuSGhZYTJ3Z0phUG5jRHNPL3hwaDN5U1VPYXA3djYKMm1yckdYVUhCSTY4YWd2SUErOU1aejljRjZySlE5Yk1JeVNTZ1FROXlDZTh4dm5KQnBXRUJOaS9FUGliMkpPNQpwT3RpKzUxNjJtQjBDYzZ0Y1ZJTVpRbzZ1c3FnS0pENkJLanNMSmFvemtka01kbC84T2pkRUY0Qk1ZcXNnQ0hmCnFweDZ3TFBhekd5Z2tFbTZSbk93djZxY3hNZ2M5U1JON0lHUGFkQ1h1ZDJRZGZlOHpuZ3hISkNwdGtub082RFEKaDFNSUd0RU1kVEV0RnBsOGV1aFRNaGlFZHNQcCtLUEljcVNKSm5JQUlGcFlKa0hYZTlabVMzSVI2WnJVWDNiVQpqNVZuQkFRUUpQNmlmbmdvUi9tVHJBSHd0blV2amZTK3RkbDRYUWZaRFFLQmdRRHBLMFc1Yy9aWHVwaXRrMzlqCjJCcWJrZTc5N2lzd1d2a21hS2hMcGMxa2svSFJYdk1heWtHZUFsQjAvMkJMVVV2TkRWNHIyYkNPQ0Rpazh2SHYKTlV0eGQ3VkxrNEhHYXpzSnZYQnNLUU9DZlRBaHNaMjM0bmdaNmFSYUdZcVNJSmFaTzI3bnI0RlRRYmFWNmlQcApqUkJhbEd5MFo0S3FqU3laSDhEcFE4T1Znd0tCZ1FEQVlzOGRLeFF0TTRaT3Mrekl2VTJkRStob0hxY1ZRemhRCkdSOVVGZUpBQmtVbWI5a0JVdGtpcWQzbkF2Y3dKcWJjd29RWDR5c0gyN3dyUzdFVllpUlFTUmdwZzZqOFdEblYKdm9oZG5PU2V4azFFYXBURitGTjdCZm9IdmN0QUhBU0VBOXg0RlZVQS9iNmx2NzNvOTNvQXRGT0Q0c1FVazNEOApCQlZza3hUTzR3S0JnRHVYQ0ltOTNpNUxqT3VIYjU0bnc1MFFyY0NOMXRIVDNpcjN3bE1hKzZRQnYySmYzc2R3CisxWVRoMVp2VWIvTjlnNWdwVG1WdCs2RW9WMWVqWUF4NGFjTkRmTlRybTMwUjdGVWpkL0dsNVFJeEgxSDlHUGoKYUFoUFV1YUg4b2NuOXZVUVlHYXJ6dVJsUGZHUVZqOUJBdlh6U3RqTVAzT3hBcjNiaEtUWTRhcGJBb0dBRXVxawpTczN0a2ZRN0JJb1Vnamg2NVRNTDZ4RDRoTkt6T3N6OWs1c0RRQ0JkdEVYVEpKb3MxNGUwVmY2b3A0ZGxhTmVICmZZSE12VjBSeDRBTnpYaDA4Wi8rVERheDZ2NFIwYjZHVWc0WFBMVnE2NHMvVGFmNUxXT05EaTNQU21KMjN6UXgKL1d5N2l2bG9RWXYwOUc5QkE4aTNYWVJ5bTBOVUhMT2FGNjd1b05rQ2dZRUFoU2c2NnNNRWQ3N3oyTnJ0NEwyUwpXOXB5eXpTeE1yRDBMWFZPbnNsTTRRWml6TUVVWE9PRWFXMU9ldnRGbHhRQ0R0NHhvYlBVVWV4L1FNc1lNN1V5CnRtVG5LR0FoV3cyakRjanNkK0VsUk00Y0ZjZ21zSGxKWVFRS0k3S0VlQjEyUTNVcVpTNUpvMTVvQnk0RDIzR2MKUVY3Y0FzTzVJMmR4VjhKTFF4MmkwWnM9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K